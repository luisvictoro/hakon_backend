from typing import List
from fastapi import UploadFile
from sqlalchemy.orm import Session
import pandas as pd
from datetime import datetime

from app.models.vulnerability import Vulnerability


def get_months(db: Session) -> List[str]:
    """Get all months from database and add current year months if empty"""
    # Get months from database
    result = db.query(Vulnerability.reference_month).distinct().all()
    db_months = [row[0] for row in result]
    
    # If no months in database, return all months of current year
    if not db_months:
        current_year = datetime.now().year
        all_months = []
        
        for month in range(1, 13):
            # Format: YYYY-MM (e.g., "2025-01", "2025-02", etc.)
            month_str = f"{current_year}-{month:02d}"
            all_months.append(month_str)
        
        return all_months
    
    return db_months


def save_csv(db: Session, file: UploadFile, reference_month: str):
    df = pd.read_csv(file.file)
    for _, row in df.iterrows():
        vuln = Vulnerability(
            ip=row.get("ip"),
            hostname=row.get("hostname"),
            nvt_name=row.get("nvt_name"),
            severity=row.get("severity"),
            cvss=row.get("cvss"),
            cves=row.get("cves"),
            reference_month=reference_month,
            created_at=datetime.utcnow(),
        )
        db.add(vuln)
    db.commit()


def delete_by_month(db: Session, month: str):
    db.query(Vulnerability).filter(Vulnerability.reference_month == month).delete()
    db.commit()


def delete_all(db: Session):
    db.query(Vulnerability).delete()
    db.commit()


def list_vulnerabilities(db: Session, skip: int = 0, limit: int = 100):
    return db.query(Vulnerability).offset(skip).limit(limit).all()
