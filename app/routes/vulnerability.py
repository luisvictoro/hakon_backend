from fastapi import APIRouter, Depends, UploadFile, File
from sqlalchemy.orm import Session

from app import schemas
from app.services import vulnerability as vuln_service, auth as auth_service

router = APIRouter(dependencies=[Depends(auth_service.get_current_user)])





@router.get("/months", response_model=list[str])
def list_months(db: Session = Depends(auth_service.get_db)):
    return vuln_service.get_months(db)


@router.get("/uploads", response_model=list[schemas.Vulnerability])
def list_uploads(db: Session = Depends(auth_service.get_db)):
    """List all vulnerabilities (alias for /list)"""
    return vuln_service.list_vulnerabilities(db)


@router.post("/upload")
def upload_csv(month: str, file: UploadFile = File(...), db: Session = Depends(auth_service.get_db)):
    vuln_service.save_csv(db, file, month)
    return {"message": "Upload successful"}


@router.get("/list", response_model=list[schemas.Vulnerability])
def list_vulns(skip: int = 0, limit: int = 100, db: Session = Depends(auth_service.get_db)):
    return vuln_service.list_vulnerabilities(db, skip=skip, limit=limit)


@router.delete("/uploads/{month}")
def delete_month(month: str, db: Session = Depends(auth_service.get_db)):
    vuln_service.delete_by_month(db, month)
    return {"message": "Deleted"}


@router.delete("/uploads/all")
def delete_all(db: Session = Depends(auth_service.get_db)):
    vuln_service.delete_all(db)
    return {"message": "All deleted"}
